[
    {
      "id": 1,
      "image": "/images/L-1.webp",
      "projet": ["/images/L-1.webp", "/images/L-2.webp", "/images/L-3.webp", "/images/L-4.webp"],
      "date": "Décembre 2024",
      "titre": "Back-end Express sécurisé pour une librairie en ligne",
      "github": "https://github.com/laure-ld/P7-Dev-Web-livres.git",
      "objectif": "Mettre en place le Back-end d’un site de notation de livres pour une librairie.",
      "technologie": ["React", "Express", "MongoDB", "Mongoose"],
      "stack_affichage": "Express – MongoDB – Auth – MVC",
      "impact_utilisateur": "Les utilisateurs peuvent noter des livres et consulter une moyenne calculée automatiquement.",
      "competences": ["Adaptabilité face aux erreurs et aux contraintes du projet", "Résolution de problèmes"],
      "description": "Développement du back-end d’un site de notation pour librairie, via une API Express connectée à MongoDB. Le projet inclut la gestion CRUD des livres et utilisateurs, la sécurité via authentification, ainsi que l’optimisation des images. L’architecture MVC et le respect des bonnes pratiques écologiques (Green Code) ont été appliqués.",
      "retour_experience": "Ce projet m’a permis de bien consolider ma maîtrise du CRUD avec Mongoose et l’architecture Express. J’ai dû surmonter des difficultés liées à l'intégration front-end (incohérences de nom, ESLint). Aujourd’hui, je sécuriserais encore plus avec une validation de schémas type Yup, et implémenterais une auth OAuth."
    },
    {
      "id": 2,
      "image": "/images/K-1.webp",
      "projet": ["/images/K-1.webp", "/images/K-2.webp", "/images/K-3.webp", "/images/K-4.webp"],
      "date": "Novembre 2024",
      "titre": "Application immobilière responsive avec React",
      "github": "https://github.com/laure-ld/kasa.git",
      "objectif": "Implémenter le front-end d’une application avec React et React Router.",
      "technologie": ["React", "React Router", "Node.js"],
      "stack_affichage": "React – Vite – Routing",
      "impact_utilisateur": "L’utilisateur navigue intuitivement entre les logements via une interface responsive.",
      "competences": ["Gestion des composants et des états dans une application React", "Organisation et structuration du code"],
      "description": "Front-end d’une application de location immobilière développée avec React et React Router. Objectif : offrir une navigation fluide et un affichage structuré des biens, en suivant une maquette précise. L’application a été configurée avec Vite pour des performances accrues et repose sur des données simulées.",
      "retour_experience": "Ce projet a renforcé mes compétences en structuration de composants, gestion des routes, et configuration d’environnement React. Pour aller plus loin, j’ajouterais une logique de filtre dynamique et des animations CSS pour améliorer l’interactivité."
    },
    {
      "id": 3,
      "image": "/images/SB-1.webp",
      "projet": ["/images/SB-1.webp", "/images/SB-2.webp", "/images/SB-3.webp", "/images/SB-4.webp"],
      "date": "Octobre 2024",
      "titre": "Site vitrine interactif avec JS Vanilla et API",
      "github": "https://github.com/laure-ld/Sophie-bluel.git",
      "objectif": "Créer une page web dynamique en JavaScript en interagissant avec une API.",
      "technologie": ["JavaScript", "DOM", "API RESTful"],
      "stack_affichage": "JS Vanilla – API – DOM",
      "impact_utilisateur": "Les utilisateurs peuvent consulter les projets d’une architecte d’intérieur et uploader de nouveaux médias.",
      "competences": ["Compréhension et manipulation du DOM", "Interaction avec une API et gestion des requêtes HTTP"],
      "description": "J’ai développé la page web dynamique d’une architecte d’intérieur en JavaScript, en intégrant une API pour afficher ses travaux. J’ai manipulé le DOM pour gérer les interactions et créé une page de connexion avec une modale d’upload de médias, le tout codé from scratch.",
      "retour_experience": "Ce projet m’a appris à gérer le JavaScript sans framework. La manipulation du DOM s’est faite naturellement, mais la gestion d’API m’a demandé plus de rigueur. Aujourd’hui, je miserais sur l’optimisation des médias (format WebP) et un meilleur SEO."
    },
    {
      "id": 4,
      "image": "/images/bot-0.webp",
      "projet": ["/images/bot-1.webp", "/images/bot-2.webp", "/images/bot-3.webp", "/images/bot-4.webp"],
      "date": "Mai 2025",
      "titre": "Bot Telegram de veille technologique intelligent",
      "github": "https://github.com/laure-ld/bot_telegram.git",
      "objectif": "Développer un bot Telegram en Python pour automatiser la veille technologique via API et stockage PostgreSQL.",
      "technologie": ["Python", "API", "PostgreSQL", "Flask", "Scheduler"],
      "stack_affichage": "Python – Flask – API – PostgreSQL – Cron",
      "impact_utilisateur": "Les utilisateurs peuvent interagir avec le bot pour rechercher, sauvegarder ou supprimer des articles pertinents. Un résumé quotidien automatisé leur est envoyé, facilitant une veille technologique efficace sans effort.",
      "competences": [
        "Initiation de projet from scratch en Python",
        "Création et gestion d’une base de données PostgreSQL",
        "Utilisation d’API publiques et de web scraping",
        "Automatisation des tâches avec planification (cron)"
      ],
      "description": "Ce bot Telegram facilite la veille technologique quotidienne. Il récupère des articles via API, permet leur sauvegarde dans une base PostgreSQL, et envoie un résumé chaque jour. L’interface Telegram permet une interaction simple (recherche, sauvegarde, suppression). Le projet a été pensé avec une logique modulaire, documenté sur Trello et développé en autonomie avec Flask.",
      "retour_experience": "Ce projet m’a permis de sortir de ma zone de confort, d’apprendre Python en profondeur, de concevoir un système complet avec persistance des données, et de comprendre la planification de tâches asynchrones. J’ai apprécié la clarté de Python et la puissance de PostgreSQL. Aujourd’hui, je souhaite continuer à développer des outils utiles avec des stacks Python orientés production."
    }    
]  